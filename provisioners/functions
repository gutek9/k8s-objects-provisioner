function func_apply_on_changed_files {
  find /src/$1   -type f -name *.yaml -not -path "*.git*"  -exec md5sum {} +   > /tmp/filelist.new.txt
  comm -1 -3 <(sort /tmp/filelist.txt) <(sort /tmp/filelist.new.txt) > /tmp/filelist.process.txt

  while read line
  do
    SUBSTRING=$(echo $line|  cut -d' '  -f2)
    date=$(date --iso-8601=seconds)
    echo  "$date File $SUBSTRING has changed"
    kubectl apply -f $SUBSTRING
  done < /tmp/filelist.process.txt

  mv /tmp/filelist.new.txt  /tmp/filelist.txt

}

function func_initialize {
  echo ""
  echo "Provisoner type $1 will operate in directory $2"
  echo ""
  touch /tmp/filelist.txt || exit
  lockfile=/tmp/lock.kubectl
  lockfile_force_update=/tmp/lock.force_update
}

function func_initial_dir_list {
  #wait until secretlist fill be created, avoid deleting pods during startup
  while [ ! -f /tmp/dirlist.txt ]
  do
    sleep 1
    echo "There is no file with $1 list yet"
    ###create secretlist with hashes, avoid deleteing pods during startup
    dir=/src/$2
    nsList=$(ls -d $dir*/*/*/)

    for i in $nsList
    do
      hash=$(find $i -type f -name "*" -not -path "*.git*" -exec md5sum {} + | awk '{print $1}' | sort | md5sum | awk '{ print $1 }')
      echo "$hash  $i  " >> /tmp/dirlist.txt
    done
  done
  echo "$(date --iso-8601=seconds) Initial list was created."
}

function func_force_update {
  if [ $PROVISONING_TYPE == force ]; then
    cd /src
    grep -l -r "kind: Namespace" . | xargs -I {} kubectl apply -f {}
  fi
}
